package com.iocl.customer.model.viewobject.ioclcommonconfig;

import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 21 14:50:48 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class IoclCommonConfigVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Id,
        PropKey,
        PropValue;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int PROPKEY = AttributesEnum.PropKey.index();
    public static final int PROPVALUE = AttributesEnum.PropValue.index();

    /**
     * This is the default constructor (do not remove).
     */
    public IoclCommonConfigVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Id.
     * @return the Id
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Gets the attribute value for the calculated attribute PropKey.
     * @return the PropKey
     */
    public String getPropKey() {
        return (String) getAttributeInternal(PROPKEY);
    }

    /**
     * Gets the attribute value for the calculated attribute PropValue.
     * @return the PropValue
     */
    public String getPropValue() {
        return (String) getAttributeInternal(PROPVALUE);
    }
}

