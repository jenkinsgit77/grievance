package com.iocl.customer.model.viewobject;

import com.iocl.customer.model.utils.EPICConstant;
import com.iocl.customer.model.utils.EPICIOCLResourceModel;

import ioclcommonproj.com.iocl.utils.JSONArray;
import ioclcommonproj.com.iocl.utils.JSONObject;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;

import org.apache.log4j.Logger;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 13 16:32:53 IST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AOLocatorVOImpl extends ViewObjectImpl {
    
    private static Logger log ;
    
    /**
     * This is the default constructor (do not remove).
     */    
    public AOLocatorVOImpl() {
        String logFlag = EPICIOCLResourceModel.findKeyValue("LOGS_PRINT_FLAG");
        if (logFlag != null && "Y".equalsIgnoreCase(logFlag)) {

            log = Logger.getLogger(AOLocatorVOImpl.class);

        } else {
            log = Logger.getLogger(AOLocatorVOImpl.class);
            Logger.getRootLogger().setLevel(org.apache.log4j.Level.OFF);
        }
    }
    
    /*
     * Below Method is Used for EPICConstant.CHECK_APPLICATION_STATUS Case 
     * in serviceLPGCall method
     * */
    public void populateAOData(String jsonInpString) {
        System.out.println("jsonInpString "+jsonInpString);
        JSONObject jsonObject = new JSONObject(jsonInpString);
        JSONObject jsonResponse = jsonObject.getJSONObject("AreaOfficeList");
        JSONArray arrObj =jsonResponse.getJSONArray("AreaOfficeInfo");
        log.info("arrObj "+arrObj);
        this.getViewObject().executeEmptyRowSet();
        for (int i = 0; i < arrObj.length(); i++) {
            JSONObject objOD = arrObj.getJSONObject(i);
            Row row = this.createRow();
          
            if (!objOD.isNull("Latitude")) {
                row.setAttribute(EPICConstant.LATITUDE_VO, objOD.getString("Latitude"));
            }else{
                row.setAttribute(EPICConstant.LATITUDE_VO, "N.A.");
            }
            if (!objOD.isNull("Longitude")) {
                row.setAttribute(EPICConstant.LONGITUDE_VO, objOD.getString("Longitude"));
            }else{
                row.setAttribute(EPICConstant.LONGITUDE_VO, "N.A.");
            }
            
            if (!objOD.isNull("PhoneNo")) {
                row.setAttribute("PhoneNo", objOD.getString("PhoneNo"));
            }else{
                row.setAttribute("PhoneNo", "N.A.");
            }
            if (!objOD.isNull("Address")) {
                row.setAttribute("Address", objOD.getString("Address"));
            }else{
                row.setAttribute("Address", "N.A.");
            }
            if (!objOD.isNull("Email")) {
                row.setAttribute("Email", objOD.getString("Email"));
            }else{
                row.setAttribute("Email", "N.A.");
            }
            if (!objOD.isNull("OfficeName")) {
                row.setAttribute("OfficeName", objOD.getString("OfficeName"));
            }else{
                row.setAttribute("OfficeName", "N.A.");
            }  
            this.insertRow(row);
        }
        
    }
    
    /*
     * Below Method is Used for EPICConstant.CHECK_APPLICATION_STATUS Case
     * in serviceLPGCall method
     * */
    
    public void insertAOFromJasonArray(JSONArray arrObj) {
        log.info("---------------------insertFromJasonArray Order ----------------------------");
        this.getViewObject().executeEmptyRowSet();
        log.info("arrObj" +arrObj);
        log.info("arrObj.length()" +arrObj.length());

        {
            log.info("logic changed");
    //            for (int i = 0; i < arrObj.length(); i++) {
            for (int i = arrObj.length() - 1; i >= 0; i--) {
                JSONObject objOD = arrObj.getJSONObject(i);
                log.info("Order "+i+" "+arrObj.getJSONObject(i));
                Row row = this.createRow();
                if (!objOD.isNull("Latitude")) {
                    row.setAttribute(EPICConstant.LATITUDE_VO,String.valueOf(objOD.get("Latitude")));
                }else{
                    row.setAttribute(EPICConstant.LATITUDE_VO, "N.A.");
                }
                if (!objOD.isNull("Longitude")) {
                    row.setAttribute(EPICConstant.LONGITUDE_VO, String.valueOf(objOD.get("Longitude")));
                }else{
                    row.setAttribute(EPICConstant.LONGITUDE_VO, "N.A.");
                }
                
                if (!objOD.isNull("PhoneNo")) {
                    row.setAttribute("PhoneNo",String.valueOf(objOD.get("PhoneNo")));
                }else{
                    row.setAttribute("PhoneNo", "N.A.");
                }
                if (!objOD.isNull("Address")) {
                    row.setAttribute("Address", String.valueOf(objOD.get("Address")));
                }else{
                    row.setAttribute("Address", "N.A.");
                }
                if (!objOD.isNull("Email")) {
                    row.setAttribute("Email", String.valueOf(objOD.get("Email")));
                }else{
                    row.setAttribute("Email", "N.A.");
                }
                if (!objOD.isNull("OfficeName")) {
                    row.setAttribute("OfficeName",String.valueOf(objOD.get("OfficeName")));
                }else{
                    row.setAttribute("OfficeName", "N.A.");
                }  
                this.insertRow(row);
            }
            
        }
    }
    
}

