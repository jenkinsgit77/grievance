package com.iocl.customer.model.viewobject.servo;

import com.iocl.customer.model.service.AppModuleImpl;
import com.iocl.customer.model.utils.ModelUtils;

import ioclcommonproj.com.iocl.utils.JSONArray;
import ioclcommonproj.com.iocl.utils.JSONObject;

import oracle.jbo.Row;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 12 11:08:18 IST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchStockistEVOImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public SearchStockistEVOImpl() {
    }

    public void setTransactions(JSONObject jsonObject) {
        //        jsonObject = getStockistObject();
        System.out.println("jsonObject" + jsonObject);
        this.getViewObject().executeEmptyRowSet();
        this.getViewObject().clearCache();
        String transactionKey = ModelUtils.createUniqueID();
        AppModuleImpl amImpl = (AppModuleImpl) this.getApplicationModule();
        //
        //        this.getViewObject().setQueryMode(ViewObject.QUERY_MODE_SCAN_VIEW_ROWS);
        this.getViewObject().executeQuery();
        JSONObject jsonResponse = null;
        JSONArray arrObj = null;
        if (jsonObject.has("StockistList")) {
            jsonResponse = jsonObject.getJSONObject("StockistList");
        }

        if (jsonResponse.has("StockistInfo")) {
            arrObj = jsonResponse.isNull("StockistInfo") ? null : jsonResponse.getJSONArray("StockistInfo");

            if (arrObj != null) {

                for (int i = 0; i < arrObj.length(); i++) {
                    JSONObject rec = (JSONObject) arrObj.getJSONObject(i);
                    System.out.println("rec  " + rec);
                    Row row = this.createRow();
                    row.setAttribute("Flowcode", transactionKey);
                    row.setAttribute("StockistName", rec.isNull("StockistName") ? "NA" : rec.getString("StockistName"));
                    row.setAttribute("ContractName", rec.isNull("ContractName") ? "NA" : rec.getString("ContractName"));
                    row.setAttribute("PhoneNo", rec.isNull("PhoneNo") ? "NA" : rec.getString("PhoneNo"));
                    row.setAttribute("EmailId", rec.isNull("EmailId") ? "NA" : rec.getString("EmailId"));
                    row.setAttribute("Address", rec.isNull("Address") ? "NA" : rec.getString("Address"));
                    //                    row.setAttribute("LocationType", rec.isNull("LocationType") ? "NA" : rec.getString("LocationType"));
                    //                    row.setAttribute("State", rec.isNull("State") ? "NA" : rec.getString("State"));
                    //                    row.setAttribute("City", rec.isNull("City") ? "NA" : rec.getString("City"));
                    //                    row.setAttribute("District", rec.isNull("District") ? "NA" : rec.getString("District"));
                    //                    row.setAttribute("PinCode", rec.isNull("PinCode") ? "NA" : rec.getString("PinCode"));

                    this.insertRow(row);

                }
            }
        }
        amImpl.getDBTransaction().commit();
        this.clearCache();
        this.clearViewCriterias();
        String str = "FLOWCODE=" + "'" + transactionKey + "'";
        this.setWhereClause(str);
        this.executeQuery();
        Long ctt = this.getEstimatedRowCount();
        System.out.println("  Count: " + ctt);

    }


    public JSONObject getStockistObject() {
        JSONObject jo = new JSONObject();
        jo.put("StockistName", "XYZ");
        jo.put("ContractName", "Doe");
        jo.put("PhoneNo", "xxxxxxxxxx");
        jo.put("EmailId", "abc@xyz.com");
        jo.put("Address", "ABC Street,XYZ state City Country");

        JSONObject jo1 = new JSONObject();
        jo1.put("StockistName", "XYZ");
        jo1.put("ContractName", "sjfhdjs");
        jo1.put("PhoneNo", "xxxxxxxxxx");
        jo1.put("EmailId", "abc@def.com");
        jo1.put("Address", "XYZ state City Country");


        JSONArray ja = new JSONArray();
        ja.put(jo);
        ja.put(jo1);

        JSONObject mainObj = new JSONObject();
        mainObj.put("StockistList", ja);
        return mainObj;
    }
}

