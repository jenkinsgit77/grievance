package com.iocl.customer.model.viewobject.Loyalty;

import com.iocl.customer.model.service.AppModuleImpl;

import com.iocl.customer.model.utils.EPICConstant;
import com.iocl.customer.model.utils.EPICIOCLResourceModel;
import com.iocl.customer.model.utils.ModelUtils;

import java.text.DateFormat;

import java.text.SimpleDateFormat;

import java.util.List;

import oracle.dss.util.xml.CommonHelper;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;

import org.apache.log4j.Logger;
import oracle.jbo.domain.Date;
import ioclcommonproj.com.iocl.utils.JSONObject;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Mar 18 11:35:51 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProfileEnrichmentVoImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public ProfileEnrichmentVoImpl() {
        String logFlag = EPICIOCLResourceModel.findKeyValue("LOGS_PRINT_FLAG");
        if (logFlag != null && "Y".equalsIgnoreCase(logFlag)) {

            log = Logger.getLogger(ProfileEnrichmentVoImpl.class);

        } else {
            log = Logger.getLogger(ProfileEnrichmentVoImpl.class);
            Logger.getRootLogger().setLevel(org.apache.log4j.Level.OFF);
        }
    }
    private static Logger log ;
    public void populateExistingRecord(String jsonString)
    {
        log.info("Inside populateExistingRecord Start");
        this.executeEmptyRowSet();
        JSONObject jsonResponse = null;
        if (jsonString != null) {
            jsonResponse = new JSONObject(jsonString);
        }

        if (jsonResponse != null) {
            Row row = this.createRow();
            String Name = (jsonResponse.isNull(EPICConstant.FIRST_NAME) ? "" :(jsonResponse.getString(EPICConstant.FIRST_NAME)+" ")) +(jsonResponse.isNull("MiddleName") ? "" :(jsonResponse.getString("MiddleName")+" "))+(jsonResponse.isNull("LastName") ? "" :jsonResponse.getString("LastName"));
            log.info("Final Name is "+Name);
            row.setAttribute("Name", String.valueOf(Name));
            row.setAttribute(EPICConstant.FIRST_NAME,jsonResponse.isNull(EPICConstant.FIRST_NAME)? "" : String.valueOf(jsonResponse.get(EPICConstant.FIRST_NAME)));
            row.setAttribute(EPICConstant.MIDDLE_NAME,jsonResponse.isNull(EPICConstant.MIDDLE_NAME)? "" : String.valueOf(jsonResponse.get(EPICConstant.MIDDLE_NAME)));
            row.setAttribute(EPICConstant.LAST_NAME,jsonResponse.isNull(EPICConstant.LAST_NAME)? "" : String.valueOf(jsonResponse.get(EPICConstant.LAST_NAME)));
            System.out.println("DateOfBirth "+String.valueOf(jsonResponse.get("DateOfBirth")));
            Date dob = null;
            if (!jsonResponse.isNull("DateOfBirth")) {
                dob = ModelUtils.dateCompToJBODate(jsonResponse.get("DateOfBirth").toString(), String.valueOf(1));
            }
                        
            System.out.println("DateOfBirth after change"+dob);
            row.setAttribute("DateOfBirth",dob);
//            row.setAttribute(EPICConstant.DATE_OF_BIRTH,jsonResponse.isNull(EPICConstant.DATE_OF_BIRTH)? "" : String.valueOf(jsonResponse.get(EPICConstant.DATE_OF_BIRTH)));
            row.setAttribute(EPICConstant.MOBILE_NO,jsonResponse.isNull(EPICConstant.MOBILE_NO)? "" : String.valueOf(jsonResponse.get(EPICConstant.MOBILE_NO)));
            row.setAttribute("xtraRewardNo",jsonResponse.isNull("XRCardNumber")? "" : String.valueOf(jsonResponse.get("XRCardNumber")));
            row.setAttribute(EPICConstant.XR_POINTS,jsonResponse.isNull(EPICConstant.XR_POINTS)? "" : String.valueOf(jsonResponse.get(EPICConstant.XR_POINTS)));
            row.setAttribute(EPICConstant.XR_UCMID,jsonResponse.isNull(EPICConstant.XR_UCMID)? "" : String.valueOf(jsonResponse.get(EPICConstant.XR_UCMID)));
            row.setAttribute(EPICConstant.LPG_UCMID,jsonResponse.isNull(EPICConstant.LPG_UCMID)? "" : String.valueOf(jsonResponse.get(EPICConstant.LPG_UCMID)));
            
            log.info("DateOfBirth in Row "+row.getAttribute("DateOfBirth"));
            String address =  null;
            JSONObject addressObj = jsonResponse.isNull(EPICConstant.ADDRESS) ? null : jsonResponse.getJSONObject(EPICConstant.ADDRESS); 
            if (addressObj != null) {
                row.setAttribute(EPICConstant.ADDRESS1,addressObj.isNull("AddressLine1")? "" : String.valueOf(addressObj.get("AddressLine1")));
                row.setAttribute(EPICConstant.ADDRESS2,addressObj.isNull("AddressLine2")? "" : String.valueOf(addressObj.get("AddressLine2")));
                row.setAttribute(EPICConstant.ADDRESS3,addressObj.isNull("AddressLine3")? "" : String.valueOf(addressObj.get("AddressLine3")));
                address = (addressObj.isNull("AddressLine1") ? "" :(addressObj.getString("AddressLine1")+" "))
                          +(addressObj.isNull("AddressLine2") ? "" :(addressObj.getString("AddressLine2")+" "))
                          +(addressObj.isNull("AddressLine3") ? "" :(addressObj.getString("AddressLine3")+" "))
                          +(addressObj.isNull(EPICConstant.CITY)? "" : String.valueOf(addressObj.get(EPICConstant.CITY))+" ")
                          +(addressObj.isNull(EPICConstant.DISTRICT)? "" : String.valueOf(addressObj.get(EPICConstant.DISTRICT))+" ")
                          +(addressObj.isNull(EPICConstant.STATE)? "" : String.valueOf(addressObj.get(EPICConstant.STATE))+" ")
                          +(addressObj.isNull(EPICConstant.PINCODE)? "" : String.valueOf(addressObj.get(EPICConstant.PINCODE))+" ");
                log.info("Final Address is "+address);
                row.setAttribute(EPICConstant.ADDRESS,address);
                row.setAttribute(EPICConstant.STATE,addressObj.isNull(EPICConstant.STATE)? "" : String.valueOf(addressObj.get(EPICConstant.STATE)));
                row.setAttribute(EPICConstant.DISTRICT,addressObj.isNull(EPICConstant.DISTRICT)? "" : String.valueOf(addressObj.get(EPICConstant.DISTRICT)));
                row.setAttribute(EPICConstant.PINCODE,addressObj.isNull(EPICConstant.PINCODE)? "" : String.valueOf(addressObj.get(EPICConstant.PINCODE)));
                row.setAttribute(EPICConstant.CITY,addressObj.isNull(EPICConstant.CITY)? "" : String.valueOf(addressObj.get(EPICConstant.CITY)));
            }

            this.insertRow(row);
        }
        log.info("Inside populateExistingRecord End");
    }
    
    public void populateDuplicateRecord(String jsonString)
    {
        log.info("Inside populateDuplicateRecord Start");
        this.executeEmptyRowSet();
        JSONObject jsonResponse = null;
        if (jsonString != null) {
            jsonResponse = new JSONObject(jsonString);
        }

        if (jsonResponse != null) {
            Row row = this.createRow();
            JSONObject duplicateJson =
                jsonResponse.isNull("DuplicateProfileData") ? null : jsonResponse.getJSONObject("DuplicateProfileData");
            
            String Name = (duplicateJson.isNull(EPICConstant.FIRST_NAME) ? "" :(duplicateJson.getString(EPICConstant.FIRST_NAME)+" ")) +(duplicateJson.isNull("MiddleName") ? "" :(duplicateJson.getString("MiddleName")+" "))+(duplicateJson.isNull("LastName") ? "" :duplicateJson.getString("LastName"));
            log.info("Final Name is "+Name);
            row.setAttribute("Name", String.valueOf(Name));
            row.setAttribute(EPICConstant.FIRST_NAME,duplicateJson.isNull(EPICConstant.FIRST_NAME)? "" : String.valueOf(duplicateJson.get(EPICConstant.FIRST_NAME)));
            row.setAttribute(EPICConstant.MIDDLE_NAME,duplicateJson.isNull(EPICConstant.MIDDLE_NAME)? "" : String.valueOf(duplicateJson.get(EPICConstant.MIDDLE_NAME)));
            row.setAttribute(EPICConstant.LAST_NAME,duplicateJson.isNull(EPICConstant.LAST_NAME)? "" : String.valueOf(duplicateJson.get(EPICConstant.LAST_NAME)));
            System.out.println("DateOfBirth "+String.valueOf(duplicateJson.get("DateOfBirth")));
            Date dob = null;
            if (!duplicateJson.isNull("DateOfBirth")) {
                dob = ModelUtils.dateCompToJBODate(duplicateJson.get("DateOfBirth").toString(), String.valueOf(3));
            }
                        
            System.out.println("DateOfBirth after change"+dob);
            row.setAttribute("DateOfBirth",dob);
    //            row.setAttribute(EPICConstant.DATE_OF_BIRTH,jsonResponse.isNull(EPICConstant.DATE_OF_BIRTH)? "" : String.valueOf(jsonResponse.get(EPICConstant.DATE_OF_BIRTH)));
            row.setAttribute(EPICConstant.MOBILE_NO,duplicateJson.isNull(EPICConstant.MOBILE_NO)? "" : String.valueOf(duplicateJson.get(EPICConstant.MOBILE_NO)));
            
            row.setAttribute("xtraRewardNo",duplicateJson.isNull("XRCardNumber")? "" : String.valueOf(duplicateJson.get("XRCardNumber")));
            row.setAttribute("MemberNumber",duplicateJson.isNull("MemberNumber")? "" : String.valueOf(duplicateJson.get("MemberNumber")));
            row.setAttribute(EPICConstant.XR_POINTS,duplicateJson.isNull(EPICConstant.XR_POINTS)? "" : String.valueOf(duplicateJson.get(EPICConstant.XR_POINTS)));
            
            log.info("DateOfBirth in Row "+row.getAttribute("DateOfBirth"));
            String address =  null;
            JSONObject addressObj = duplicateJson.isNull(EPICConstant.ADDRESS) ? null : duplicateJson.getJSONObject(EPICConstant.ADDRESS); 
            if (addressObj != null) {
                row.setAttribute(EPICConstant.ADDRESS1,addressObj.isNull("AddressLine1")? "" : String.valueOf(addressObj.get("AddressLine1")));
                row.setAttribute(EPICConstant.ADDRESS2,addressObj.isNull("AddressLine2")? "" : String.valueOf(addressObj.get("AddressLine2")));
                row.setAttribute(EPICConstant.ADDRESS3,addressObj.isNull("AddressLine3")? "" : String.valueOf(addressObj.get("AddressLine3")));
                address = (addressObj.isNull("AddressLine1") ? "" :(addressObj.getString("AddressLine1")+" "))
                          +(addressObj.isNull("AddressLine2") ? "" :(addressObj.getString("AddressLine2")+" "))
                          +(addressObj.isNull("AddressLine3") ? "" :(addressObj.getString("AddressLine3")+" "))
                          +(addressObj.isNull(EPICConstant.CITY)? "" : String.valueOf(addressObj.get(EPICConstant.CITY))+" ")
                          +(addressObj.isNull(EPICConstant.DISTRICT)? "" : String.valueOf(addressObj.get(EPICConstant.DISTRICT))+" ")
                          +(addressObj.isNull(EPICConstant.STATE)? "" : String.valueOf(addressObj.get(EPICConstant.STATE))+" ")
                          +(addressObj.isNull(EPICConstant.PINCODE)? "" : String.valueOf(addressObj.get(EPICConstant.PINCODE))+" ");
                log.info("Final Address is "+address);
                row.setAttribute(EPICConstant.ADDRESS,address);
                row.setAttribute(EPICConstant.STATE,addressObj.isNull(EPICConstant.STATE)? "" : String.valueOf(addressObj.get(EPICConstant.STATE)));
                row.setAttribute(EPICConstant.DISTRICT,addressObj.isNull(EPICConstant.DISTRICT)? "" : String.valueOf(addressObj.get(EPICConstant.DISTRICT)));
                row.setAttribute(EPICConstant.PINCODE,addressObj.isNull(EPICConstant.PINCODE)? "" : String.valueOf(addressObj.get(EPICConstant.PINCODE)));
                row.setAttribute(EPICConstant.CITY,addressObj.isNull(EPICConstant.CITY)? "" : String.valueOf(addressObj.get(EPICConstant.CITY)));
            }

            this.insertRow(row);
        }
        log.info("Inside populateDuplicateRecord End");
    }
    
    
    public String setProfileEnrichment(String jsonString) {
        log.info("Inside setProfileEnrichment");
        if (jsonString != null) {
            JSONObject jsonInput = new JSONObject(jsonString);
            Row currentRow = this.getCurrentRow();
            
            Date dob = (oracle.jbo.domain.Date) currentRow.getAttribute(EPICConstant.DATE_OF_BIRTH);
            DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
            String dobInString = null;
            if (dob != null) {
                dobInString = formatter.format(dob.dateValue());
                log.info("dobInString" + dobInString);
            }
                    
            jsonInput.put("Prefix", currentRow.getAttribute("Prefix"));
            jsonInput.put(EPICConstant.FIRST_NAME, currentRow.getAttribute(EPICConstant.FIRST_NAME));
            jsonInput.put(EPICConstant.MIDDLE_NAME, currentRow.getAttribute(EPICConstant.MIDDLE_NAME));
            jsonInput.put(EPICConstant.LAST_NAME, currentRow.getAttribute(EPICConstant.LAST_NAME));
            jsonInput.put("Gender", currentRow.getAttribute("Gender"));
            jsonInput.put(EPICConstant.DATE_OF_BIRTH,dobInString);
            jsonInput.put("MotherMaidenName", currentRow.getAttribute("MotherMaidenName"));
            jsonInput.put(EPICConstant.ADDRESS1, currentRow.getAttribute(EPICConstant.ADDRESS1));
            jsonInput.put(EPICConstant.ADDRESS2, currentRow.getAttribute(EPICConstant.ADDRESS2));
            jsonInput.put(EPICConstant.ADDRESS3, currentRow.getAttribute(EPICConstant.ADDRESS3));
            jsonInput.put("Address4", currentRow.getAttribute("Address4"));
            jsonInput.put(EPICConstant.STATE, currentRow.getAttribute(EPICConstant.STATE));
            jsonInput.put(EPICConstant.DISTRICT, currentRow.getAttribute(EPICConstant.DISTRICT));
            jsonInput.put(EPICConstant.CITY, currentRow.getAttribute(EPICConstant.CITY));
            jsonInput.put(EPICConstant.PINCODE, currentRow.getAttribute(EPICConstant.PINCODE));
            
            String officePhoneNoVar = (currentRow.getAttribute("OfficePhoneStd") == null ? "" :currentRow.getAttribute("OfficePhoneStd").toString())+ (currentRow.getAttribute("OfficePhoneNo") == null ? "":currentRow.getAttribute("OfficePhoneNo").toString());
            jsonInput.put("OfficePhoneNo",officePhoneNoVar);
            String residencePhoneNoVar = (currentRow.getAttribute("ResidencePhoneStd") == null ? "" :currentRow.getAttribute("ResidencePhoneStd").toString())+ (currentRow.getAttribute("ResidencePhoneNo") == null ? "":currentRow.getAttribute("ResidencePhoneNo").toString());
            jsonInput.put("ResidencePhoneNo",residencePhoneNoVar);
            
            jsonInput.put("EmailId", currentRow.getAttribute("EmailId"));
            jsonInput.put(EPICConstant.MOBILE_NO, currentRow.getAttribute(EPICConstant.MOBILE_NO));
            jsonInput.put("AnnualIncome", currentRow.getAttribute("AnnualIncome"));
            jsonInput.put("AadharNumber", currentRow.getAttribute("AadharNumber"));
            return jsonInput.toString();
        } else
            return null;
    }
}

